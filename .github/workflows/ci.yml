name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CACHE_ON_FAILURE: false

jobs:
  # Quick format and lint checks - fail fast
  quick-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Rust format check
        run: cargo fmt --check
      
      - name: Rust clippy
        run: cargo clippy -- -D warnings

  # Main test job - only run if quick checks pass
  test:
    needs: quick-checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only test min and max Python versions to save CI time
        python-version: ["3.10", "3.12"]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-
      
      - name: Install dependencies
        run: |
          uv sync --dev
          source .venv/bin/activate
          pip install maturin
      
      - name: Build Rust extension
        run: |
          source .venv/bin/activate
          maturin develop --release
      
      - name: Python linting
        run: |
          source .venv/bin/activate
          ruff check .
          mypy . || true  # Allow mypy failures for now
      
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -v --tb=short -x  # Stop on first failure
          cargo test --release